name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# If you ever switch to GITHUB_TOKEN for GHCR, these help:
permissions:
  contents: read
  packages: write

concurrency:
  group: cicd-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }} # or use GITHUB_TOKEN with packages:write

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Update GitOps repository
        shell: bash
        env:
          GIT_TOKEN: ${{ secrets.GITOPS_PAT }}   # PAT with repo:write on the GitOps repo
          GITOPS_REPO: marisol-tembo/grade-api-gitops
        run: |
          set -euo pipefail

          # Fresh clone without storing creds on disk
          rm -rf gitops
          git clone "https://github.com/${GITOPS_REPO}.git" gitops
          cd gitops

          # Mark as safe for git on runners
          git config --global --add safe.directory "$(pwd)"

          # Prepare values
          NEW_IMAGE="ghcr.io/${{ github.repository }}:${{ github.sha }}"

          # Update the image reference in deployment.yaml (handles Linux/macOS sed)
          if [[ "$OSTYPE" == "darwin"* ]]; then
            sed -i '' "s|^\s*image:\s*ghcr\.io/${{ github.repository }}:.*$|image: ${NEW_IMAGE}|" deployment.yaml
          else
            sed -i "s|^\s*image:\s*ghcr\.io/${{ github.repository }}:.*$|image: ${NEW_IMAGE}|" deployment.yaml
          fi

          # Stage and check if anything changed
          git add deployment.yaml || true
          if git diff --cached --quiet; then
            echo "No changes to commit. deployment.yaml already points to ${NEW_IMAGE}."
            exit 0
          fi

          # Commit & push using token in remote URL (no credential helper)
          git -c user.name="GitHub Actions" -c user.email="actions@github.com" \
            commit -m "Update image to ${{ github.sha }}"
          git push "https://${GIT_TOKEN}@github.com/${GITOPS_REPO}.git" HEAD:main
